image: docker:latest

variables:
  IMAGE_TEST: $CI_REGISTRY_IMAGE/test
  IMAGE_PROD: $CI_REGISTRY_IMAGE/prod
  FOLDER_TEST: /data/docker-compose/$CI_PROJECT_NAME-test
  FOLDER_PROD: /data/docker-compose/$CI_PROJECT_NAME
  COMPOSER: /usr/local/bin/docker-compose
  DOCKER: /usr/bin/docker

services:
  - docker:dind
cache:
  key: cache-global-key
  paths:
    - dist/
    - node_modules/

stages:
  - build
  - package
  - deploy

build-test:
  image: node:latest
  stage: build
  script:
    - npm install -g @angular/cli
    - npm install
    - ng build --configuration=staging --prod=false
  artifacts:
    paths:
      - dist/*
  only:
    - test

build-prod:
  image: docker.tele2.kz/ncp/angular-cli:latest
  stage: build
  script:
    - npm install
    - ng build --configuration=production --prod=true
  artifacts:
    paths:
      - dist/*
  only:
    - master

docker-build-test:
  stage: package
  script:
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest -t $IMAGE_TEST:latest .
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN docker.tele2.kz
    - docker push $IMAGE_TEST:latest
  only:
    - test

docker-build-prod:
  stage: package
  script:
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest -t $IMAGE_PROD:latest .
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN docker.tele2.kz
    - docker push $IMAGE_PROD:latest
  only:
    - master

deploy-test:
  stage: deploy
  image: ubuntu
  environment:
    name: development
  only:
    - test
  before_script:
    - apt update
    - apt install -y sshpass
    - sshpass -V
    - uname -a
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY22" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan "$SSH_SERVER_HOST22" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - apt install -y curl
  script:
    - export SSHPASS=$DOCKER_USER22
    - sshpass -e ssh -T root@$SSH_SERVER_HOST22 bash $FOLDER_TEST/down.sh
    - sshpass -e ssh -T root@$SSH_SERVER_HOST22 $DOCKER login -u gitlab-ci-token -p $CI_BUILD_TOKEN docker.tele2.kz
    - sshpass -e ssh -T root@$SSH_SERVER_HOST22 $COMPOSER -f $FOLDER_TEST/docker-compose.yml pull
    - sshpass -e ssh -T root@$SSH_SERVER_HOST22 bash $FOLDER_TEST/up.sh
    - sshpass -e ssh -T root@$SSH_SERVER_HOST22 $DOCKER logout docker.tele2.kz
    - curl -d "pwd=RefreshVerPlease" https://b2b.tele2.kz/ncp/api-test/ver

deploy-prod:
  stage: deploy
  image: ubuntu
  environment:
    name: development
  only:
    - master
  before_script:
    - apt update
    - apt install -y sshpass
    - sshpass -V
    - uname -a
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY22" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan "$SSH_SERVER_HOST22" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - apt install -y curl
  script:
    - export SSHPASS=$DOCKER_USER22
    - sshpass -e ssh -T root@$SSH_SERVER_HOST22 bash $FOLDER_PROD/down.sh
    - sshpass -e ssh -T root@$SSH_SERVER_HOST22 $DOCKER login -u gitlab-ci-token -p $CI_BUILD_TOKEN docker.tele2.kz
    - sshpass -e ssh -T root@$SSH_SERVER_HOST22 $COMPOSER -f $FOLDER_PROD/docker-compose.yml pull
    - sshpass -e ssh -T root@$SSH_SERVER_HOST22 bash $FOLDER_PROD/up.sh
    - sshpass -e ssh -T root@$SSH_SERVER_HOST22 $DOCKER logout docker.tele2.kz
    - curl -d "pwd=RefreshVerPlease" https://b2b.tele2.kz/ncp/api/ver
