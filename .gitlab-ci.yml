image: docker:latest
services:
  - docker:dind
cache:
  key: cache-global-key
  paths:
    - dist/
    - node_modules/

stages:
  - build
  - package
  - deploy

build:
  image: docker.tele2.kz/ncp/angular-cli:latest
  stage: build
  #before_script:
  #  - ssh-keyscan -H $SSH_SERVER_HOST >> ~/.ssh/known_hosts

  script:
   # - export SSHPASS=$USER_PASS
    #- sshpass -e scp ncp-frontend-app-deployment.yaml kube@$SSH_SERVER_HOST:/home/kube/ncp-frontend-app-deployment.yaml
    - npm install
    - ng build --configuration=production --prod=true
  artifacts:
    paths:
      - dist/*
  only:
    - master
    - test

docker-build:
  stage: package
  script:
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest -t $CI_REGISTRY_IMAGE:latest .
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN docker.tele2.kz
    - docker push $CI_REGISTRY_IMAGE:latest
  only:
    - master
    - test

deploy-to-review:
  stage: deploy
  image: ubuntu
  environment:
    name: development
      #kubernetes:
    # namespace: ncp
  only:
    - test
  before_script:
    - apt update
    - apt install -y sshpass
    - sshpass -V
    - uname -a
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY22" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan "$SSH_SERVER_HOST22" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  #script:
  #  - export SSHPASS=$USER_PASS
  #  - sshpass -e ssh -T kube@$SSH_SERVER_HOST kubectl scale --replicas=0 deployment.apps/frontend-app -n ncp
  #  - sshpass -e ssh -T kube@$SSH_SERVER_HOST kubectl apply -f /home/kube/ncp-frontend-app-deployment.yaml
  #allow_failure: true
  script:
    - export SSHPASS=$DOCKER_USER22
    - sshpass -e ssh -T root@$SSH_SERVER_HOST22 /usr/bin/docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN docker.tele2.kz
    - sshpass -e ssh -T root@$SSH_SERVER_HOST22 docker pull $CI_REGISTRY_IMAGE:latest
    - sshpass -e ssh -T root@$SSH_SERVER_HOST22 /usr/local/bin/docker-compose -f /data/docker-compose/$CI_PROJECT_NAME-test/docker-compose.yml down
    - sshpass -e ssh -T root@$SSH_SERVER_HOST22 /usr/local/bin/docker-compose -f /data/docker-compose/$CI_PROJECT_NAME-test/docker-compose.yml up -d
    - sshpass -e ssh -T root@$SSH_SERVER_HOST22 /usr/bin/docker logout docker.tele2.kz

deploy-to-production:
  stage: deploy
  image: ubuntu
  environment:
    name: development
    #kubernetes:
     # namespace: ncp
  only:
  - master
  before_script:
    - apt update
    - apt install -y sshpass
    - sshpass -V
    - uname -a
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY22" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan "$SSH_SERVER_HOST22" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  #script:
  #  - export SSHPASS=$USER_PASS
  #  - sshpass -e ssh -T kube@$SSH_SERVER_HOST kubectl scale --replicas=0 deployment.apps/frontend-app -n ncp
  #  - sshpass -e ssh -T kube@$SSH_SERVER_HOST kubectl apply -f /home/kube/ncp-frontend-app-deployment.yaml
  #allow_failure: true
  script:
    - export SSHPASS=$DOCKER_USER22
    - sshpass -e ssh -T root@$SSH_SERVER_HOST22 /usr/bin/docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN docker.tele2.kz
    - sshpass -e ssh -T root@$SSH_SERVER_HOST22 docker pull $CI_REGISTRY_IMAGE:latest
    - sshpass -e ssh -T root@$SSH_SERVER_HOST22 /usr/local/bin/docker-compose -f /data/docker-compose/$CI_PROJECT_NAME/docker-compose.yml down
    - sshpass -e ssh -T root@$SSH_SERVER_HOST22 /usr/local/bin/docker-compose -f /data/docker-compose/$CI_PROJECT_NAME/docker-compose.yml up -d
    - sshpass -e ssh -T root@$SSH_SERVER_HOST22 /usr/bin/docker logout docker.tele2.kz
